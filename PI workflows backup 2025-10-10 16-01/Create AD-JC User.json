{
  "createdAt": "2025-09-02T14:13:13.473Z",
  "updatedAt": "2025-09-27T21:12:08.000Z",
  "id": "vb6sSMl5XrlcvUae",
  "name": "Create AD/JC User",
  "active": true,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "command": "=powershell.exe -NoProfile -Command \"& { C:\\Scripts\\Create-ADUser-From-n8n.ps1 -FirstName '{{$json[\"body\"][\"firstname\"]}}' -LastName '{{$json[\"body\"][\"lastname\"]}}' -EmployeeNumber '{{$json[\"body\"][\"employeenumber\"]}}' -JobTitle '{{$json[\"body\"][\"jobtitle\"]}}' -Department '{{$json[\"body\"][\"department\"]}}' -ManagerSam '{{$json[\"body\"][\"managersam\"]}}' -OfficePhone '{{$json[\"body\"][\"officephone\"]}}' -OfficeLocation '{{$json[\"body\"][\"officelocation\"]}}' -SourceUsername '{{$json[\"body\"][\"sourceusername\"]}}' }\"",
        "cwd": "="
      },
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        512,
        416
      ],
      "id": "16e30789-dbad-4eb5-a9c3-3b5a50bebde4",
      "name": "Create New AD User",
      "credentials": {
        "sshPassword": {
          "id": "79KNHZGwd8w288i9",
          "name": "SSH Password account"
        }
      }
    },
    {
      "parameters": {
        "sendTo": "={{ $('Gmail Trigger').item.json.from?.value?.map(v => v.address).join(', ') }}",
        "subject": "=Re: {{$('Gmail Trigger').item.json.subject}} - Processing Started",
        "message": "=<h2 style=\"color:blue;\">ðŸ“§ User Creation Request Received</h2>\n\n<p>Thank you for your user creation request. We have received your email and are processing the following information:</p>\n\n<ul>\n<li><b>First Name:</b> {{$json[\"body\"][\"firstname\"]}}</li>\n<li><b>Last Name:</b> {{$json[\"body\"][\"lastname\"]}}</li>\n<li><b>Employee Number:</b> {{$json[\"body\"][\"employeenumber\"]}}</li>\n<li><b>Job Title:</b> {{$json[\"body\"][\"jobtitle\"]}}</li>\n<li><b>Department:</b> {{$json[\"body\"][\"department\"]}}</li>\n<li><b>Manager SAM:</b> {{$json[\"body\"][\"managersam\"]}}</li>\n<li><b>Office Phone:</b> {{$json[\"body\"][\"officephone\"] || 'Not provided'}}</li>\n<li><b>Office Location:</b> {{$json[\"body\"][\"officelocation\"] || 'Not provided'}}</li>\n</ul>\n\n<p style=\"color:green;\"><b>Status:</b> Processing...</p>\n<p>You will receive another notification once the user account has been created successfully.</p>\n\n<hr>\n<small>This is an automated message from Alex IT Systems.</small>",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        0,
        -32
      ],
      "id": "e071b0fb-64e2-4f21-889f-f4a9a2a47d6e",
      "name": "Send Acknowledgment AD",
      "webhookId": "799b1b4d-00fd-4a0c-890c-9991db9a7c75",
      "credentials": {
        "gmailOAuth2": {
          "id": "C5742Grqr9Rpnxid",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// ----- 1) Get the email body from this payload shape -----\nfunction htmlToText(html) {\n  if (!html) return '';\n  // Normalize line breaks before stripping tags\n  html = html\n    .replace(/<br\\s*\\/?>/gi, '\\n')\n    .replace(/<\\/(p|div|li|tr|h\\d)>/gi, '\\n')\n    .replace(/&nbsp;/gi, ' ');\n  // Strip tags\n  const text = html.replace(/<[^>]+>/g, ' ');\n  // Collapse whitespace\n  return text.replace(/\\r?\\n/g, '\\n').replace(/[ \\t]+\\n/g, '\\n').replace(/[ \\t]{2,}/g, ' ').trim();\n}\n\nlet emailBody =\n  ($json.text && String($json.text)) ||\n  htmlToText($json.html) ||\n  htmlToText($json.textAsHtml) ||\n  ($json.snippet && String($json.snippet)) ||\n  '';\n\n// If body still empty, try base64-encoded Gmail payload (rare here but safe)\nif (!emailBody && $json.payload && $json.payload.body && $json.payload.body.data) {\n  try {\n    const buff = Buffer.from($json.payload.body.data, 'base64');\n    emailBody = buff.toString('utf8');\n  } catch (_) {}\n}\n\n// Safety: normalize whitespace for robust regex capture\nconst flat = (emailBody || '').replace(/\\r/g, '').replace(/[ \\t]+/g, ' ').trim();\n\n// ----- 2) Robust field capture (works for single-line or multiline) -----\nconst LABELS = [\n  'First Name','Last Name','Employee Number','Job Title',\n  'Department','Manager SAM','Manager','Office Phone','Phone',\n  'Office Location','Location','Source Username'\n];\n\nfunction esc(s){ return s.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); }\n\nfunction captureAfter(label, src) {\n  const labelEsc = esc(label);\n  const next = LABELS.filter(l => l !== label).map(esc);\n  const lookahead = next.length ? `(?=\\\\s*(?:${next.join('|')})\\\\s*:|$)` : '$';\n  // Accept either single-line or multiline values\n  const re = new RegExp(`${labelEsc}\\\\s*:\\\\s*([\\\\s\\\\S]*?)\\\\s*${lookahead}`, 'i');\n  const m = src.match(re);\n  return m ? m[1].trim() : '';\n}\n\nconst userData = {\n  firstname:      captureAfter('First Name', flat),\n  lastname:       captureAfter('Last Name', flat),\n  employeenumber: captureAfter('Employee Number', flat),\n  jobtitle:       captureAfter('Job Title', flat),\n  department:     captureAfter('Department', flat),\n  managersam:     captureAfter('Manager SAM', flat) || captureAfter('Manager', flat),\n  officephone:    captureAfter('Office Phone', flat) || captureAfter('Phone', flat),\n  officelocation: captureAfter('Office Location', flat) || captureAfter('Location', flat),\n  sourceusername: captureAfter('Source Username', flat),\n};\n\n// ----- 3) Validate required fields -----\nconst required = ['firstname','lastname','employeenumber','jobtitle','department','managersam'];\nconst missing = required.filter(f => !userData[f] || userData[f].trim() === '');\nif (missing.length) {\n  throw new Error(`Missing required fields: ${missing.join(', ')}. Parsed body was empty or labels didn't match exactly.`);\n}\n\n// ----- 4) Subject/From/MessageId from this payload shape -----\nconst subj =\n  $json.subject ||\n  ($json.headers && typeof $json.headers.subject === 'string'\n    ? $json.headers.subject.replace(/^Subject:\\s*/i,'').trim()\n    : '');\n\nconst fromText =\n  ($json.from && $json.from.text) ||\n  ($json.headers && typeof $json.headers.from === 'string'\n    ? $json.headers.from.replace(/^From:\\s*/i,'').trim()\n    : '');\n\nconst msgId =\n  $json.messageId ||\n  ($json.headers && typeof $json.headers['message-id'] === 'string'\n    ? $json.headers['message-id'].replace(/^Message-Id:\\s*/i,'').trim()\n    : '');\n\n// ----- 5) Return in your expected shape -----\nreturn {\n  body: userData,\n  originalEmail: {\n    subject: subj,\n    from: fromText,\n    messageId: msgId,\n  },\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -112,
        416
      ],
      "id": "420d63d7-c0a9-4910-aa90-31f9d11472f2",
      "name": "Email Parser AD"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "if (!$json[\"stdout\"] || $json[\"stdout\"].trim() === \"\") {\n  throw new Error(\"No JSON output received from PowerShell script. Stdout was empty.\");\n}\nlet out;\ntry {\n  out = JSON.parse($json[\"stdout\"]);\n} catch (e) {\n  throw new Error(\"Failed to parse JSON from PowerShell script: \" + e.message + \"\\n\\nOutput was:\\n\" + $json[\"stdout\"]);\n}\nif (out.error) {\n  throw new Error(\"PowerShell script error: \" + out.error);\n}\nreturn out;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        784,
        416
      ],
      "id": "a76c1c8f-bc80-41d2-bc27-1df8b0c21a61",
      "name": "PowerShell Output Parser AD"
    },
    {
      "parameters": {
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C099QKJSCTD",
          "mode": "list",
          "cachedResultName": "new-user-created"
        },
        "text": "=ðŸ¤– *New JC User Created Successfully!*\n\n*First Name:* {{$json[\"FirstName\"]}}\n*Last Name:* {{$json[\"LastName\"]}}\n*Employee Number:* {{$json[\"EmployeeNumber\"]}}\n*Job Title:* {{$json[\"JobTitle\"]}}\n*Department:* {{$json[\"Department\"]}}\n*Manager:* {{$json[\"Manager\"]}}\n*Office Location:* {{$json[\"OfficeLocation\"]}}\n*Phone:* {{$json[\"OfficePhone\"]}}\n*Email:* {{$json[\"Email\"]}}\n*Username:* {{$json[\"Username\"]}}\n*Password:* `{{$json[\"Password\"]}}`\n{{$json[\"ConflictMessage\"]}}",
        "otherOptions": {}
      },
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.3,
      "position": [
        1040,
        0
      ],
      "id": "258060f6-6700-4e0b-bcaa-052d3d3e4d33",
      "name": "Send a message JC",
      "webhookId": "619d4034-0d7d-43f0-9691-ea960aef7115",
      "credentials": {
        "slackApi": {
          "id": "DaNIVrtwfHymDT9P",
          "name": "New User"
        }
      }
    },
    {
      "parameters": {
        "sendTo": "vinokura@alex-it.net",
        "subject": "New AD user Created",
        "message": "=<h1 style=\"color:blue;\">ðŸ¤– New AD User Created:</h1>\n\n<p style=\"color:black; font-size:1.1em;\"><b>First Name:</b> {{$json[\"FirstName\"]}}</p>\n<p style=\"color:black; font-size:1.1em;\"><b>Last Name:</b> {{$json[\"LastName\"]}}</p>\n<p style=\"color:black; font-size:1.1em;\"><b>Employee Number:</b> {{$json[\"EmployeeNumber\"]}}</p>\n<p style=\"color:black; font-size:1.1em;\"><b>Department:</b> {{$json[\"Department\"]}}</p>\n<p style=\"color:black; font-size:1.1em;\"><b>Job Title:</b> {{$json[\"JobTitle\"]}}</p>\n<p style=\"color:black; font-size:1.1em;\"><b>Username:</b> {{$json[\"Username\"]}}</p>\n<p style=\"color:black; font-size:1.1em;\"><b>Manager:</b> {{$json[\"Manager\"]}}</p>\n<p style=\"color:black; font-size:1.1em;\"><b>Office Location:</b> {{$json[\"OfficeLocation\"]}}</p>\n<p style=\"color:black; font-size:1.1em;\"><b>Office Phone:</b> {{$json[\"OfficePhone\"]}}</p>\n<p style=\"color:black; font-size:1.1em;\"><b>E-mail:</b> {{$json[\"Email\"]}}</p>\n<p style=\"color:black; font-size:1.1em;\"><b>DL Groups Copied:</b> {{$json[\"DLGroupsCopied\"].join(', ')}}</p>\n<p style=\"color:black; font-size:1.1em;\"><b>Security Groups Copied:</b> {{$json[\"SecurityGroupsCopied\"].join(', ')}}</p>\n<p style=\"color:red; font-size:1.3em;\"><b>Initial Password:</b> <code>{{$json[\"Password\"]}}</code></p>\n<p style=\"color:red; font-size:1.1em;\"><b>Make sure to save the initial password in a safe location!</b></p>\n<p style=\"color:green; font-size:1.3em;\"><b>Alex IT</b></p>\n<hr>\n<small>This is an automated message. Do not reply.</small>",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1056,
        192
      ],
      "id": "1fecd824-667e-4228-8e53-920d098200ec",
      "name": "Send Message AD",
      "webhookId": "961eced4-af4c-4015-a632-1c5dcecb5a5f",
      "executeOnce": false,
      "credentials": {
        "gmailOAuth2": {
          "id": "C5742Grqr9Rpnxid",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1nh_eXCRjrbruYZWqF8_8LvW3TQ_d7EsN3bCQF_6Wfpg",
          "mode": "list",
          "cachedResultName": "New AD User Created",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1nh_eXCRjrbruYZWqF8_8LvW3TQ_d7EsN3bCQF_6Wfpg/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1nh_eXCRjrbruYZWqF8_8LvW3TQ_d7EsN3bCQF_6Wfpg/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "First Name": "={{$json[\"FirstName\"]}}",
            "Last Name": "={{$json[\"LastName\"]}}",
            "Job Title": "={{$json[\"JobTitle\"]}}\n",
            "Password": "={{$json[\"Password\"]}}",
            "Employee Number": "={{$json[\"EmployeeNumber\"]}}",
            "Department": "={{$json[\"Department\"]}}",
            "Manager": "={{$json[\"Manager\"]}}",
            "Office Location": "={{$json[\"OfficeLocation\"]}}",
            "Office Phone": "={{$json[\"OfficePhone\"]}}",
            "Username": "={{$json[\"Username\"]}}",
            "Email": "={{$json[\"Email\"]}}",
            "DL Groups Copied": "={{$json[\"DLGroupsCopied\"].join(', ')}}",
            "Security Groups Copied": "={{$json[\"SecurityGroupsCopied\"].join(', ')}}",
            "Conflict Message": "={{$json[\"ConflictMessage\"]}}",
            "Timestamp": "={{new Date().toLocaleString(\"en-GB\", { hour12: false, timeZone: \"Asia/Jerusalem\" })}}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Timestamp",
              "displayName": "Timestamp",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "First Name",
              "displayName": "First Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Last Name",
              "displayName": "Last Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Employee Number",
              "displayName": "Employee Number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Job Title",
              "displayName": "Job Title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Department",
              "displayName": "Department",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Manager",
              "displayName": "Manager",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Office Location",
              "displayName": "Office Location",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Office Phone",
              "displayName": "Office Phone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Username",
              "displayName": "Username",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Email",
              "displayName": "Email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "DL Groups Copied",
              "displayName": "DL Groups Copied",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Security Groups Copied",
              "displayName": "Security Groups Copied",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Password",
              "displayName": "Password",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Conflict Message",
              "displayName": "Conflict Message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        1056,
        368
      ],
      "id": "374a1b7d-e480-4953-886a-b356de696703",
      "name": "Append row in sheet AD",
      "executeOnce": false,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "MCeFqIGjffYKd95d",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "426570413",
        "text": "=ðŸ¤– *New AD User Created Successfully!*\n\n*First Name:* {{$json[\"FirstName\"]}}\n*Last Name:* {{$json[\"LastName\"]}}\n*Employee Number:* {{$json[\"EmployeeNumber\"]}}\n*Job Title:* {{$json[\"JobTitle\"]}}\n*Department:* {{$json[\"Department\"]}}\n*Manager:* {{$json[\"Manager\"]}}\n*Office Location:* {{$json[\"OfficeLocation\"]}}\n*Phone:* {{$json[\"OfficePhone\"]}}\n*Email:* {{$json[\"Email\"]}}\n*Password:* `{{$json[\"Password\"]}}`\n*DL Groups Copied:* {{$json[\"DLGroupsCopied\"].join(', ')}}\n*Security Groups Copied:* {{$json[\"SecurityGroupsCopied\"].join(', ')}}\n{{$json[\"ConflictMessage\"]}}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1072,
        544
      ],
      "id": "b16cae5c-90fd-4b74-8395-3794884929eb",
      "name": "Send a text message AD",
      "webhookId": "ae9b49c5-f740-4d7f-b4af-c7ce2935e45f",
      "executeOnce": false,
      "credentials": {
        "telegramApi": {
          "id": "QH2SVpRQkhmpSDsN",
          "name": "Users Bot"
        }
      }
    },
    {
      "parameters": {
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C099QKJSCTD",
          "mode": "list",
          "cachedResultName": "new-user-created"
        },
        "text": "=ðŸ¤– *New AD User Created Successfully!*\n\n*First Name:* {{$json[\"FirstName\"]}}\n*Last Name:* {{$json[\"LastName\"]}}\n*Employee Number:* {{$json[\"EmployeeNumber\"]}}\n*Job Title:* {{$json[\"JobTitle\"]}}\n*Department:* {{$json[\"Department\"]}}\n*Manager:* {{$json[\"Manager\"]}}\n*Office Location:* {{$json[\"OfficeLocation\"]}}\n*Phone:* {{$json[\"OfficePhone\"]}}\n*Email:* {{$json[\"Email\"]}}\n*Password:* `{{$json[\"Password\"]}}`\n*DL Groups Copied:* {{$json[\"DLGroupsCopied\"].join(', ')}}\n*Security Groups Copied:* {{$json[\"SecurityGroupsCopied\"].join(', ')}}\n{{$json[\"ConflictMessage\"]}}\n",
        "otherOptions": {}
      },
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.3,
      "position": [
        1088,
        736
      ],
      "id": "98d17c73-ea6c-4117-b6a1-49b4deddfb51",
      "name": "Send a message AD",
      "webhookId": "619d4034-0d7d-43f0-9691-ea960aef7115",
      "credentials": {
        "slackApi": {
          "id": "DaNIVrtwfHymDT9P",
          "name": "New User"
        }
      }
    },
    {
      "parameters": {
        "command": "=powershell.exe -NoProfile -Command \"& { C:\\Scripts\\Create-JCUser-From-n8n.ps1 -FirstName '{{$json[\"body\"][\"firstname\"]}}' -LastName '{{$json[\"body\"][\"lastname\"]}}' -EmployeeNumber '{{$json[\"body\"][\"employeenumber\"]}}' -JobTitle '{{$json[\"body\"][\"jobtitle\"]}}' -Department '{{$json[\"body\"][\"department\"]}}' -ManagerSam '{{$json[\"body\"][\"managersam\"]}}' -OfficePhone '{{$json[\"body\"][\"officephone\"]}}' -OfficeLocation '{{$json[\"body\"][\"officelocation\"]}}' }\"",
        "cwd": "="
      },
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        352,
        -272
      ],
      "id": "97f98a71-7f8f-46e2-9f29-ed666099cfd8",
      "name": "Create New JC User",
      "credentials": {
        "sshPassword": {
          "id": "79KNHZGwd8w288i9",
          "name": "SSH Password account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "7dd6a3f5-aa13-4fdc-88f8-a9798fbf925d",
                    "leftValue": "={{$json.subject || $json.headers?.subject?.replace(/^Subject:\\s*/i,'').trim() || ''}}",
                    "rightValue": "JC",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "3367d402-3127-4cf0-b3de-69d8cdc8cf90",
                    "leftValue": "={{$json.subject || $json.headers?.subject?.replace(/^Subject:\\s*/i,'').trim() || ''}}",
                    "rightValue": "AD",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -512,
        -256
      ],
      "id": "993a8e12-82d3-4d63-883a-9db0a1044125",
      "name": "Switch"
    },
    {
      "parameters": {
        "sendTo": "={{ $('Gmail Trigger').item.json.from?.value?.map(v => v.address).join(', ') }}",
        "subject": "=Re: {{$('Gmail Trigger').item.json.subject}} - Processing Started",
        "message": "=<h2 style=\"color:blue;\">ðŸ“§ User Creation Request Received</h2>\n\n<p>Thank you for your user creation request. We have received your email and are processing the following information:</p>\n\n<ul>\n<li><b>First Name:</b> {{$json[\"body\"][\"firstname\"]}}</li>\n<li><b>Last Name:</b> {{$json[\"body\"][\"lastname\"]}}</li>\n<li><b>Employee Number:</b> {{$json[\"body\"][\"employeenumber\"]}}</li>\n<li><b>Job Title:</b> {{$json[\"body\"][\"jobtitle\"]}}</li>\n<li><b>Department:</b> {{$json[\"body\"][\"department\"]}}</li>\n<li><b>Manager SAM:</b> {{$json[\"body\"][\"managersam\"]}}</li>\n<li><b>Office Phone:</b> {{$json[\"body\"][\"officephone\"] || 'Not provided'}}</li>\n<li><b>Office Location:</b> {{$json[\"body\"][\"officelocation\"] || 'Not provided'}}</li>\n</ul>\n\n<p style=\"color:green;\"><b>Status:</b> Processing...</p>\n<p>You will receive another notification once the user account has been created successfully.</p>\n\n<hr>\n<small>This is an automated message from Alex IT Systems.</small>",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        16,
        -640
      ],
      "id": "929d2895-9391-42c2-ad5b-5fa164d06798",
      "name": "Send Acknowledgment JC",
      "webhookId": "799b1b4d-00fd-4a0c-890c-9991db9a7c75",
      "credentials": {
        "gmailOAuth2": {
          "id": "C5742Grqr9Rpnxid",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "simple": false,
        "filters": {},
        "options": {}
      },
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1.3,
      "position": [
        -848,
        -256
      ],
      "id": "287481f1-9fd6-4e50-8a59-b2483c508a50",
      "name": "Gmail Trigger",
      "credentials": {
        "gmailOAuth2": {
          "id": "C5742Grqr9Rpnxid",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// ----- 1) Get the email body from this payload shape -----\nfunction htmlToText(html) {\n  if (!html) return '';\n  // Normalize line breaks before stripping tags\n  html = html\n    .replace(/<br\\s*\\/?>/gi, '\\n')\n    .replace(/<\\/(p|div|li|tr|h\\d)>/gi, '\\n')\n    .replace(/&nbsp;/gi, ' ');\n  // Strip tags\n  const text = html.replace(/<[^>]+>/g, ' ');\n  // Collapse whitespace\n  return text.replace(/\\r?\\n/g, '\\n').replace(/[ \\t]+\\n/g, '\\n').replace(/[ \\t]{2,}/g, ' ').trim();\n}\n\nlet emailBody =\n  ($json.text && String($json.text)) ||\n  htmlToText($json.html) ||\n  htmlToText($json.textAsHtml) ||\n  ($json.snippet && String($json.snippet)) ||\n  '';\n\n// If body still empty, try base64-encoded Gmail payload (rare here but safe)\nif (!emailBody && $json.payload && $json.payload.body && $json.payload.body.data) {\n  try {\n    const buff = Buffer.from($json.payload.body.data, 'base64');\n    emailBody = buff.toString('utf8');\n  } catch (_) {}\n}\n\n// Safety: normalize whitespace for robust regex capture\nconst flat = (emailBody || '').replace(/\\r/g, '').replace(/[ \\t]+/g, ' ').trim();\n\n// ----- 2) Robust field capture (works for single-line or multiline) -----\nconst LABELS = [\n  'First Name','Last Name','Employee Number','Job Title',\n  'Department','Manager SAM','Manager','Office Phone','Phone',\n  'Office Location','Location'\n];\n\nfunction esc(s){ return s.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); }\n\nfunction captureAfter(label, src) {\n  const labelEsc = esc(label);\n  const next = LABELS.filter(l => l !== label).map(esc);\n  const lookahead = next.length ? `(?=\\\\s*(?:${next.join('|')})\\\\s*:|$)` : '$';\n  // Accept either single-line or multiline values\n  const re = new RegExp(`${labelEsc}\\\\s*:\\\\s*([\\\\s\\\\S]*?)\\\\s*${lookahead}`, 'i');\n  const m = src.match(re);\n  return m ? m[1].trim() : '';\n}\n\nconst userData = {\n  firstname:      captureAfter('First Name', flat),\n  lastname:       captureAfter('Last Name', flat),\n  employeenumber: captureAfter('Employee Number', flat),\n  jobtitle:       captureAfter('Job Title', flat),\n  department:     captureAfter('Department', flat),\n  managersam:     captureAfter('Manager SAM', flat) || captureAfter('Manager', flat),\n  officephone:    captureAfter('Office Phone', flat) || captureAfter('Phone', flat),\n  officelocation: captureAfter('Office Location', flat) || captureAfter('Location', flat),\n};\n\n// ----- 3) Validate required fields -----\nconst required = ['firstname','lastname','employeenumber','jobtitle','department','managersam'];\nconst missing = required.filter(f => !userData[f] || userData[f].trim() === '');\nif (missing.length) {\n  throw new Error(`Missing required fields: ${missing.join(', ')}. Parsed body was empty or labels didn't match exactly.`);\n}\n\n// ----- 4) Subject/From/MessageId from this payload shape -----\nconst subj =\n  $json.subject ||\n  ($json.headers && typeof $json.headers.subject === 'string'\n    ? $json.headers.subject.replace(/^Subject:\\s*/i,'').trim()\n    : '');\n\nconst fromText =\n  ($json.from && $json.from.text) ||\n  ($json.headers && typeof $json.headers.from === 'string'\n    ? $json.headers.from.replace(/^From:\\s*/i,'').trim()\n    : '');\n\nconst msgId =\n  $json.messageId ||\n  ($json.headers && typeof $json.headers['message-id'] === 'string'\n    ? $json.headers['message-id'].replace(/^Message-Id:\\s*/i,'').trim()\n    : '');\n\n// ----- 5) Return in your expected shape -----\nreturn {\n  body: userData,\n  originalEmail: {\n    subject: subj,\n    from: fromText,\n    messageId: msgId,\n  },\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -96,
        -272
      ],
      "id": "a650085a-e0d0-4205-9033-105259013c20",
      "name": "Email Parser JC"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "if (!$json[\"stdout\"] || $json[\"stdout\"].trim() === \"\") {\n  throw new Error(\"No JSON output received from PowerShell script. Stdout was empty.\");\n}\nlet out;\ntry {\n  out = JSON.parse($json[\"stdout\"]);\n} catch (e) {\n  throw new Error(\"Failed to parse JSON from PowerShell script: \" + e.message + \"\\n\\nOutput was:\\n\" + $json[\"stdout\"]);\n}\nif (out.error) {\n  throw new Error(\"PowerShell script error: \" + out.error);\n}\nreturn out;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        608,
        -272
      ],
      "id": "a0e4d860-4076-4865-b5f5-a5c95b5ace91",
      "name": "PowerShell Output Parser JC"
    },
    {
      "parameters": {
        "sendTo": "vinokura@alex-it.net",
        "subject": "New AD user Created",
        "message": "=<h1 style=\"color:blue;\">ðŸ¤– New JC User Created:</h1>\n\n<p style=\"color:black; font-size:1.1em;\"><b>First Name:</b> {{$json[\"FirstName\"]}}</p>\n<p style=\"color:black; font-size:1.1em;\"><b>Last Name:</b> {{$json[\"LastName\"]}}</p>\n<p style=\"color:black; font-size:1.1em;\"><b>Employee Number:</b> {{$json[\"EmployeeNumber\"]}}</p>\n<p style=\"color:black; font-size:1.1em;\"><b>Department:</b> {{$json[\"Department\"]}}</p>\n<p style=\"color:black; font-size:1.1em;\"><b>Job Title:</b> {{$json[\"JobTitle\"]}}</p>\n<p style=\"color:black; font-size:1.1em;\"><b>Username:</b> {{$json[\"Username\"]}}</p>\n<p style=\"color:black; font-size:1.1em;\"><b>Manager:</b> {{$json[\"Manager\"]}}</p>\n<p style=\"color:black; font-size:1.1em;\"><b>Office Location:</b> {{$json[\"OfficeLocation\"]}}</p>\n<p style=\"color:black; font-size:1.1em;\"><b>Office Phone:</b> {{$json[\"OfficePhone\"]}}</p>\n<p style=\"color:black; font-size:1.1em;\"><b>E-mail:</b> {{$json[\"Email\"]}}</p>\n<p style=\"color:black; font-size:1.1em;\"><b>DL Groups Copied:</b> {{$json[\"DLGroupsCopied\"].join(', ')}}</p>\n<p style=\"color:black; font-size:1.1em;\"><b>Security Groups Copied:</b> {{$json[\"SecurityGroupsCopied\"].join(', ')}}</p>\n<p style=\"color:red; font-size:1.3em;\"><b>Initial Password:</b> <code>{{$json[\"Password\"]}}</code></p>\n<p style=\"color:red; font-size:1.1em;\"><b>Make sure to save the initial password in a safe location!</b></p>\n<p style=\"color:green; font-size:1.3em;\"><b>Alex IT</b></p>\n<hr>\n<small>This is an automated message. Do not reply.</small>",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1040,
        -544
      ],
      "id": "9c12337d-cfbd-42bb-bcda-8f0b61dfa8af",
      "name": "Send Message JC",
      "webhookId": "961eced4-af4c-4015-a632-1c5dcecb5a5f",
      "executeOnce": false,
      "credentials": {
        "gmailOAuth2": {
          "id": "C5742Grqr9Rpnxid",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1nh_eXCRjrbruYZWqF8_8LvW3TQ_d7EsN3bCQF_6Wfpg",
          "mode": "list",
          "cachedResultName": "New AD User Created",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1nh_eXCRjrbruYZWqF8_8LvW3TQ_d7EsN3bCQF_6Wfpg/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1nh_eXCRjrbruYZWqF8_8LvW3TQ_d7EsN3bCQf_6Wfpg/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "First Name": "={{$json[\"FirstName\"]}}",
            "Last Name": "={{$json[\"LastName\"]}}",
            "Job Title": "={{$json[\"JobTitle\"]}}\n",
            "Password": "={{$json[\"Password\"]}}",
            "Employee Number": "={{$json[\"EmployeeNumber\"]}}",
            "Department": "={{$json[\"Department\"]}}",
            "Manager": "={{$json[\"Manager\"]}}",
            "Office Location": "={{$json[\"OfficeLocation\"]}}",
            "Office Phone": "={{$json[\"OfficePhone\"]}}",
            "Username": "={{$json[\"Username\"]}}",
            "Email": "={{$json[\"Email\"]}}",
            "DL Groups Copied": "={{$json[\"DLGroupsCopied\"].join(', ')}}",
            "Security Groups Copied": "={{$json[\"SecurityGroupsCopied\"].join(', ')}}",
            "Conflict Message": "={{$json[\"ConflictMessage\"]}}",
            "Timestamp": "={{new Date().toLocaleString(\"en-GB\", { hour12: false, timeZone: \"Asia/Jerusalem\" })}}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Timestamp",
              "displayName": "Timestamp",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "First Name",
              "displayName": "First Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Last Name",
              "displayName": "Last Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Employee Number",
              "displayName": "Employee Number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Job Title",
              "displayName": "Job Title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Department",
              "displayName": "Department",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Manager",
              "displayName": "Manager",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Office Location",
              "displayName": "Office Location",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Office Phone",
              "displayName": "Office Phone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Username",
              "displayName": "Username",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Email",
              "displayName": "Email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "DL Groups Copied",
              "displayName": "DL Groups Copied",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Security Groups Copied",
              "displayName": "Security Groups Copied",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Password",
              "displayName": "Password",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Conflict Message",
              "displayName": "Conflict Message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        1040,
        -368
      ],
      "id": "489e2069-3a36-4fdc-a67b-0daf6131ca1d",
      "name": "Append row in sheet JC",
      "executeOnce": false,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "MCeFqIGjffYKd95d",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "426570413",
        "text": "=ðŸ¤– *New JC User Created Successfully!*\n\n*First Name:* {{$json[\"FirstName\"]}}\n*Last Name:* {{$json[\"LastName\"]}}\n*Employee Number:* {{$json[\"EmployeeNumber\"]}}\n*Job Title:* {{$json[\"JobTitle\"]}}\n*Department:* {{$json[\"Department\"]}}\n*Manager:* {{$json[\"Manager\"]}}\n*Office Location:* {{$json[\"OfficeLocation\"]}}\n*Phone:* {{$json[\"OfficePhone\"]}}\n*Email:* {{$json[\"Email\"]}}\n*Username:* {{$json[\"Username\"]}}\n*Password:* `{{$json[\"Password\"]}}`\n{{$json[\"ConflictMessage\"]}}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1040,
        -176
      ],
      "id": "62c0c511-99ec-449b-a85e-931f64cd7636",
      "name": "Send a text message JC",
      "webhookId": "ae9b49c5-f740-4d7f-b4af-c7ce2935e45f",
      "executeOnce": false,
      "credentials": {
        "telegramApi": {
          "id": "QH2SVpRQkhmpSDsN",
          "name": "Users Bot"
        }
      }
    }
  ],
  "connections": {
    "Create New AD User": {
      "main": [
        [
          {
            "node": "PowerShell Output Parser AD",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Email Parser AD": {
      "main": [
        [
          {
            "node": "Send Acknowledgment AD",
            "type": "main",
            "index": 0
          },
          {
            "node": "Create New AD User",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "PowerShell Output Parser AD": {
      "main": [
        [
          {
            "node": "Send a message AD",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send a text message AD",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send Message AD",
            "type": "main",
            "index": 0
          },
          {
            "node": "Append row in sheet AD",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create New JC User": {
      "main": [
        [
          {
            "node": "PowerShell Output Parser JC",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Email Parser JC",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Email Parser AD",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gmail Trigger": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Email Parser JC": {
      "main": [
        [
          {
            "node": "Create New JC User",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send Acknowledgment JC",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "PowerShell Output Parser JC": {
      "main": [
        [
          {
            "node": "Send a message JC",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send Message JC",
            "type": "main",
            "index": 0
          },
          {
            "node": "Append row in sheet JC",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send a text message JC",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:Gmail Trigger": {
      "Gmail Trigger": {
        "lastTimeChecked": 1760099629,
        "possibleDuplicates": [
          "199ce1d00b02c659",
          "199ce0f537fb7dc0"
        ]
      }
    }
  },
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "004e5e97-652c-4855-be65-283226951001",
  "triggerCount": 1,
  "shared": [
    {
      "createdAt": "2025-09-02T14:13:13.480Z",
      "updatedAt": "2025-09-02T14:13:13.480Z",
      "role": "workflow:owner",
      "workflowId": "vb6sSMl5XrlcvUae",
      "projectId": "NptNxIUgBjUJaRfd"
    }
  ],
  "tags": []
}